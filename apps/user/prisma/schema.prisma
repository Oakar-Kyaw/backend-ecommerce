  // This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/user" 
}

datasource db {
  provider = "postgresql"
  url      = env("USER_DB_URL")
}

model User {
  id                      Int                    @id @default(autoincrement())
  email                   String                 @unique
  photoUrl                String?
  identification          String?
  firstName               String?  
  lastName                String?            
  password                String?
  phone                   String?      
  gender                  Gender                 @default(MALE)
  role                    Role                   @default(CUSTOMER)
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  isDeleted               Boolean                @default(false)
  dateOfBirth             DateTime?
  brandUserRelationship   BrandUserRelationship[]
}

model Brand {
  id                      Int                       @id @default(autoincrement())
  name                    String
  code                    String                    @unique
  phone                   String?                  
  email                   String?                  
  address                 String?                   
  description             String?
  feedback                String?
  info                    String?

  isDeleted               Boolean                   @default(false)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt

  brandUserRelationships  BrandUserRelationship[]   

  @@unique([name, isDeleted])  // allows soft delete reuse
  @@index([isDeleted])          // fast filtering by active/deleted
}

model BrandUserRelationship {
   id             Int      @id  @default(autoincrement())
   userId         Int
   user           User     @relation(fields: [userId], references: [id])
   brandId        Int
   brand          Brand    @relation(fields:[brandId], references: [id])
   @@unique([userId, brandId])
}

enum Role {
  CUSTOMER
  ADMIN
  SALE
}

enum Gender {
  MALE
  FEMALE
}