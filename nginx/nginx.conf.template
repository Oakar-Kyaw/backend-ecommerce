events {
    worker_connections 1024;
}

http {
    upstream auth {
        server auth:5003;   # Auth service
    }

    upstream user {
        server user:5001;   # User service
    }

    # HTTP Server
    server {
        listen 80;
        server_name ecommerce-backend.ddns.net;

        # Let's Encrypt verification
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Check if SSL certificate exists, if yes redirect to HTTPS
        location / {
            if (-f /etc/letsencrypt/live/ecommerce-backend.ddns.net/fullchain.pem) {
                return 301 https://$host$request_uri;
            }

            # If no SSL certificate, serve content on HTTP
            location /api/v1/auth/ {
                proxy_pass http://auth/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }

            location /api/v1/users/ {
                proxy_pass http://user/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }

            # Default welcome message
            add_header Content-Type application/json;
            return 200 '{"message": "welcome to ecommerce backend"}';
        }
    }

    # HTTPS Server (only if certificates exist)
    server {
        listen 443 ssl;
        server_name ecommerce-backend.ddns.net;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/ecommerce-backend.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ecommerce-backend.ddns.net/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Auth API
        location /api/v1/auth/ {
            proxy_pass http://auth/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # User API
        location /api/v1/users/ {
            proxy_pass http://user/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Welcome message for root
        location / {
            add_header Content-Type application/json;
            return 200 '{"message": "welcome to ecommerce backend"}';
        }
    }
}